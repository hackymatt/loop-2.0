version: "3.9"

services:
  backend:
    hostname: backend
    build:
      context: ./backend
      dockerfile: ./Dockerfile.local
    restart: always
    ports:
      - 8000:8000
    volumes:
      - ./backend/:/usr/src/app/backend
      - staticfiles:/usr/src/app/backend/static
      - mediafiles:/usr/src/app/backend/media
    environment:
      - LOCAL=${LOCAL}
      - SECRET_KEY=${SECRET_KEY}
      - JWT_SECRET=${JWT_SECRET}
      - ALLOWED_HOST=${ALLOWED_HOST}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - CONTACT_EMAIL=${CONTACT_EMAIL}
      - NOREPLY_EMAIL=${NOREPLY_EMAIL}
      - GOOGLE_CREDENTIALS=${GOOGLE_CREDENTIALS}
      - ADMIN_EMAIL=${ADMIN_EMAIL}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - DUMMY_STUDENT_EMAIL=${DUMMY_STUDENT_EMAIL}
      - DUMMY_STUDENT_PASSWORD=${DUMMY_STUDENT_PASSWORD}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - FACEBOOK_CLIENT_ID=${FACEBOOK_CLIENT_ID}
      - FACEBOOK_CLIENT_SECRET=${FACEBOOK_CLIENT_SECRET}
      - GITHUB_CLIENT_ID=${GITHUB_CLIENT_ID}
      - GITHUB_CLIENT_SECRET=${GITHUB_CLIENT_SECRET}
      - S3_ACCESS_KEY=${S3_ACCESS_KEY}
      - S3_SECRET_KEY=${S3_SECRET_KEY}
      - BROKER_URL=${BROKER_URL}
    depends_on:
      - db
      - redis
      - broker
    networks:
      - app-network

  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: ./Dockerfile.local
      target: dev
    restart: always
    command: yarn dev
    environment:
      - WATCHPACK_POLLING=true
      - NEXT_PUBLIC_ENV=LOCAL
      - NEXT_PUBLIC_API_URL=${API_URL}
      - NEXT_PUBLIC_WS_URL=${WS_URL}
      - NEXT_PUBLIC_GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - NEXT_PUBLIC_FACEBOOK_CLIENT_ID=${FACEBOOK_CLIENT_ID}
      - NEXT_PUBLIC_GITHUB_CLIENT_ID=${GITHUB_CLIENT_ID}
      - NEXT_PUBLIC_MIN_PASSWORD_LENGTH=${MIN_PASSWORD_LENGTH}
      - NEXT_PUBLIC_GOOGLE_ANALYTICS_ID=${GOOGLE_ANALYTICS_ID}
      - NEXT_PUBLIC_FACEBOOK_PIXEL_ID=${FACEBOOK_PIXEL_ID}
    volumes:
      - ./frontend:/usr/src/app/frontend
      - /usr/src/app/frontend/node_modules
      - /usr/src/app/frontend/.next
    depends_on:
      - backend
      - broker
    networks:
      - app-network

  nginx:
    container_name: nginx
    image: nginx:latest
    build:
      context: ./nginx
    ports:
      - 80:80
    volumes:
      - staticfiles:/usr/src/app/backend/static
      - mediafiles:/usr/src/app/backend/media
    depends_on:
      - backend
      - frontend
    networks:
      - app-network

  broker:
    container_name: broker
    build:
      context: ./broker
    environment:
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_PORT=${RABBITMQ_PORT}
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
      - API_PORT=${API_PORT}
      - WS_PORT=${WS_PORT}
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      - rabbitmq
    networks:
      - app-network

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - app-network

  redis:
    container_name: redis
    image: redis:7.2.5-bookworm
    restart: always
    volumes:
      - "redis:/data"
    networks:
      - app-network

  db:
    container_name: database
    image: postgres:15
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    networks:
      - app-network

volumes:
  postgres_data:
  redis:
  rabbitmq_data:
  staticfiles:
  mediafiles:

networks:
  app-network:
    driver: bridge
